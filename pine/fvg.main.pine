  
//-----------------------------------------------------------------------------
// FVG - Detection and display
//-----------------------------------------------------------------------------


var fvg_lastStartTime = 0
var fvg_records = array.new<Fvg>(0)

bool fvgDetected = false
string fvgDetectedText = ""

if isNewHour
    new_fvg = request.security(syminfo.tickerid, "60", fvgDetect())

    // debugLabelOffset := debugLabel(debugLabelOffset, str.tostring(isBull)+str.tostring(isBear))

    if not na(new_fvg)
        if new_fvg.startTime != fvg_lastStartTime
            new_fvg.startIndex := bar_index - 2 * hourBars
            fvg_lastStartTime := new_fvg.startTime

            state = createFvgState(new_fvg)
            draw = createFvgDraw(new_fvg, state)

            fvg = Fvg.new(new_fvg, draw, state)
            fvg_records.unshift(fvg)

            fvgDetected := true
            fvgDetectedText := "FVG detected " + fvgGetDetectedText(fvg)
            showAlarm(fvgDetectedText, fvg.def.isBull ? "bottom" : "top", fvgAlarmLabels)


//-----------------------------------------------------------------------------
// FVG - Mitigation Logik
//-----------------------------------------------------------------------------
// Boxen rechts verschieben oder "abschlieÃŸen"

bool fvgShowEnter = false
bool fvgShowNear = false
string fvgShowEnterText = na
string fvgShowNearText = na
bool fvgShowInvalidated = false
// 
// float alarmMin = 0
// float alarmMax = 0
// bool alarmBull = false
// 

if fvg_records.size() > 0
    for i = 0 to fvg_records.size() -1
        fvg = fvg_records.get(i)

        if not fvg.state.isDead and (fvgDebugStartTime == 0 or fvg.def.startTime == fvgDebugStartTime)
            [state, action] = fvgCheckInBar(fvg)
            fvg.state := state

            if action == "entered"
                fvgShowEnter := true
                fvgShowEnterText := "FVG Entered " + fvgGetEnteredText(fvg)
                showAlarm(fvgShowEnterText, fvg.def.isBull ? "bottom" : "top", fvgAlarmLabels)
                fvgSetEnterText(fvg)

            if action == "near"
                fvgShowNear := true
                fvgShowNearText := "FVG Near " + fvgGetNearText(fvg)
                showAlarm(fvgShowNearText, fvg.def.isBull ? "bottom" : "top", fvgAlarmLabels)
                fvgSetEnterText(fvg)

            if action == "invalidate"
                fvgShowInvalidated := true
                fvgDrawSetInvalidated(fvg.draw, fvg.def)

            if not state.isDead
                fvgDrawMitigate(fvg.draw)

        fvg_records.set(i, fvg)

if fvg_records.size() > 0
    for i = fvg_records.size()-1 to 0
        fvg = fvg_records.get(i)
        if box.get_left(fvg.draw.drawBox) < bar_index - fvgMaxAgeBars
            fvgDrawRemove(fvg.draw)
            fvg_records.remove(i)
        

//-----------------------------------------------------------------------------}
//FVG - Alerts
//-----------------------------------------------------------------------------{

//alertcondition(fvgShowEnter, 'FVG-enter', '{{ticker}} FairValueGap ENTER')
//alertcondition(fvgShowNear, 'FVG-near', '{{ticker}} FairValueGap NEAR')
//alertcondition(fvgShowInvalidated, 'FVG-invalid', '{{ticker}} FairValueGap invalidated')

if fvgShowEnter
    alert(syminfo.ticker + fvgShowEnterText, alert.freq_once_per_bar)
else if fvgShowNear
    alert(syminfo.ticker + fvgShowNearText, alert.freq_once_per_bar)
else if fvgDetected
    alert(syminfo.ticker + fvgDetectedText, alert.freq_once_per_bar)
    
