


isBull(offset = 0) =>
  close[offset] > open[offset]

isBear(offset = 0) =>
  close[offset] < open[offset]

bodySize(offset = 0) =>
    math.abs(close[offset] - open[offset])

valueToPercent(value, index = 0) =>
    value / open[index] * 100.

proportionPercent(baseValue, propotionValue) =>
    propotionValue / baseValue * 100.
    
approxEq(value, target, tollerance) =>
    math.abs(value - target) < tollerance
        
currentHourTime = timestamp("UTC", year, month, dayofmonth, hour, 0)
isNewHour = currentHourTime != currentHourTime[1]

hourBars = (60 / timeframe.multiplier)

getRiskRewardTarget (min, max, rrrTarget) =>
  sizePercent = (max - min) / min * 100,
  rrrSL = sizePercent / 2 + rrrFees,
  rrrTP = rrrSL * rrrTarget + rrrFees,
  rrrText = rrrHint ? str.tostring((rrrSL + rrrTP)/rrrSL, "#.0") : "",
  percentText = str.tostring(sizePercent, format.percent),
  [rrrText, percentText]

getMaxRatioText (min, max, max_value) =>
  sizePercent = (max - min) / min * 100,
  center = (max - min) / 2,
  maxPercent = math.abs(max_value - center) / min * 100,
  sl = sizePercent / 2,
  str.tostring((maxPercent + sl), "#.0")
  
  